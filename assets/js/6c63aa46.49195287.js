"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1468],{3653:(t,i,e)=>{e.r(i),e.d(i,{assets:()=>h,contentTitle:()=>r,default:()=>g,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=e(5893),s=e(1151);const o={},r="List main fork",a={id:"3rd-party-images/List-main-fork",title:"List main fork",description:"Jay's 64b Torch AI version - is probably the most mature one, leveraging Torch instead of TensorFlow, and designed to run on 64b Pis (like pi4, pi5, pi02). https://github.com/jayofelony/pwnagotchi",source:"@site/docs/3rd-party-images/List-main-fork.md",sourceDirName:"3rd-party-images",slug:"/3rd-party-images/List-main-fork",permalink:"/3rd-party-images/List-main-fork",draft:!1,unlisted:!1,editUrl:"https://github.com/Pwnagotchi-Unofficial/pwnagotchi-unofficial.github.io/tree/main/docs/3rd-party-images/List-main-fork.md",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"3rd party images",permalink:"/category/3rd-party-images"},next:{title:"Contributing",permalink:"/contributing"}},h={},c=[];function p(t){const i={a:"a",h1:"h1",p:"p",...(0,s.ah)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"list-main-fork",children:"List main fork"}),"\n",(0,n.jsxs)(i.p,{children:["Jay's 64b Torch AI version - is probably the most mature one, leveraging Torch instead of TensorFlow, and designed to run on 64b Pis (like pi4, pi5, pi02). ",(0,n.jsx)(i.a,{href:"https://github.com/jayofelony/pwnagotchi",children:"https://github.com/jayofelony/pwnagotchi"}),'\nJay\'s "No-AI" version - basically the same thing, but it drops the "AI" part, making it faster, harder, better stronger. - ',(0,n.jsx)(i.a,{href:"https://github.com/Pwnagotchi-Unofficial/pwnagotchi-torch-no_ai",children:"https://github.com/Pwnagotchi-Unofficial/pwnagotchi-torch-no_ai"})]}),"\n",(0,n.jsxs)(i.p,{children:["Nurse's 32b Torch version - from what I understand, the same as Jay's 64b Torch version, but also working on 32b systems. ",(0,n.jsx)(i.a,{href:"https://github.com/Sniffleupagus/pwnagotchi-snflpgs",children:"https://github.com/Sniffleupagus/pwnagotchi-snflpgs"})]}),"\n",(0,n.jsxs)(i.p,{children:["Alum's version - Removes broken dependencies and kali-pi, stable kernel, usage of nexmon, and some QoL improvements. I think it also runs on 32b boards, but still uses TF. ",(0,n.jsx)(i.a,{href:"https://github.com/aluminum-ice/pwnagotchi",children:"https://github.com/aluminum-ice/pwnagotchi"})]}),"\n",(0,n.jsxs)(i.p,{children:["WPA2's fix - In essence, the original thing, but with AI fixed. ",(0,n.jsx)(i.a,{href:"https://github.com/wpa-2/pwnagotchi",children:"https://github.com/wpa-2/pwnagotchi"})]}),"\n",(0,n.jsx)(i.p,{children:"Clean fork - start from scratch, introduce changes from the rest with PRs. Might make sense for merging together Alices' and WPA's forks together into one working 32b \"legacy\" version for oldschoolers running Pi01."})]})}function g(t={}){const{wrapper:i}={...(0,s.ah)(),...t.components};return i?(0,n.jsx)(i,{...t,children:(0,n.jsx)(p,{...t})}):p(t)}},1151:(t,i,e)=>{e.d(i,{ah:()=>o});var n=e(7294);const s=n.createContext({});function o(t){const i=n.useContext(s);return n.useMemo((()=>"function"==typeof t?t(i):{...i,...t}),[i,t])}}}]);